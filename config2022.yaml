teams: ['vibro','VISIONE','CVHunter', 'VERGE','vitrivr-VR', 'vitrivr', ] #'diveXplore',

logs:
  VISIONE: data/2022/team_logs/VISIONE
  vibro: data/2022/team_logs/vibro
  diveXplore: data/2022/team_logs/diveXplore
  VERGE: data/2022/team_logs/from_dres/verge
  vitrivr: data/2022/team_logs/from_dres/vitrivr
  vitrivr-VR: data/2022/team_logs/from_dres/vitrivr-vr
  CVHunter: null  # data is injected directly inside the cache folder, given that the team already provided processed data (see scripts/cvhunter_to_pandas.csv)

generate:
  - name: time_recall_table
    function: generate.TimeRecallTable
    generate_args: {split_user: False, only_best_user: False, max_records: 1000}
    render_args: {}

  - name: best_shot_rank_boxplot
    function: generate.BestShotRankBoxplot
    generate_args: {max_records: 10000, split_user: True, fill_missing: False}
    render_args: {show_boxplot: False, figsize: [6, 5]}

  - name: browsing_efficiency_boxplot
    function: generate.BrowsingEfficiencyBoxplot
    generate_args: {max_records: 1000, split_user: True, fill_missing: False}
    render_args: {show_boxplot: False, figsize: [6, 5]}

  - name: browsing_efficiency_scatterplot_firstappearance
    function: generate.BrowsingEfficiencyScatterplot
    generate_args: {max_records: 10000}
    render_args: {time_of: 'first_appearance', figsize: [6, 5], marker_size: 60}

  - name: browsing_efficiency_scatterplot_lastappearance
    function: generate.BrowsingEfficiencyScatterplot
    generate_args: {max_records: 10000}
    render_args: {time_of: 'last_appearance', figsize: [6, 5], marker_size: 60}